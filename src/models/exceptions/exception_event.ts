/* eslint-disable @typescript-eslint/no-empty-interface */
import { IEntityWithVersion } from "../entity_with_version";
import { IExceptionInstance } from "../exceptions/exception_instance";
import { IRule } from "../exceptions/rule";
import { IDevice } from "../device";
import { IDiagnostic } from "../engine/diagnostic";
import { IDriver } from "../driver";

/**  The event of an exception generated by Rule violation. */
export interface IExceptionEvent extends IEntityWithVersion {
  /** Gets or sets the start date of the ExceptionEvent; at or after this date. */
  activeFrom?: Date;
  /** Gets or sets the end date of the ExceptionEvent; at or before this date. */
  activeTo?: Date;
  /** Gets or sets the {@link IDevice} related to the ExceptionEvent. */
  device?: IDevice;
  /** Gets or sets the {@link IDiagnostic}. */
  diagnostic?: IDiagnostic;
  /** Gets or sets the distance travelled since the start of the ExceptionEvent. */
  distance?: number;
  /** Gets or sets the {@link IDriver} specified for the device. */
  driver?: IDriver;
  /** Gets the duration of the exception event. */
  duration?: Date;
  /** Gets or sets the collection of {@link IExceptionInstance}. */
  exceptions?: IExceptionInstance[];
  /**
   * @inheritdoc
   */
  from?: Date;
  /** Gets or sets the exception Rule which was broken. */
  rule?: IRule;
  /**
   * @inheritdoc
   */
  to?: Date;
}
